{"version":3,"sources":["component/Form/Form.js","component/Filter/Filter.js","component/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","id","htmlFor","className","type","onChange","placeholder","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","App","filter","addContact","contact","find","toLowerCase","toast","trim","test","deleteContact","contactId","changeFilter","getContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621703fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PT from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form id=\"contact\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            placeholder=\"Andrey Kovsh\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <label htmlFor={this.numberInputId}>\r\n          Phone number\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            placeholder=\"817-18-41\"\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PT.func.isRequired,\r\n};\r\n\r\nexport default Form;","import PT from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PT.string,\r\n  onChange: PT.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PT from 'prop-types';\r\nimport './ContactList.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PT.arrayOf(\r\n    PT.shape({\r\n      id: PT.string.isRequired,\r\n      name: PT.string.isRequired,\r\n      number: PT.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PT.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Form from './component/Form/Form.js';\nimport Filter from './component/Filter/Filter.js';\nimport ContactList from './component/ContactList/ContactList.js';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n   const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      toast(`${name} is already in use`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      toast(`${number} is already in use`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      toast(\"Enter the contact's name and phone number!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      toast('Enter the correct phone number');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n          )}\n        <ToastContainer></ToastContainer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}